#!/bin/bash

# Must be run with source!
ESTATUS=$?

if [ "$ESTATUS" -eq "0" ]; then
	echo "Are you sure you made a typo? The exit status of your last command was 0"
else
	LAST=$(history | tail -2 | head -1 | cut -d " " -f 3- | sed "s/^[ \t]*//")
	FOUND_STATUS=$($LAST 2>&1 | tail -1 | cut -d ":" -f 2 | sed "s/^[ \t]*//")

	if [[ $FOUND_STATUS == "command not found" ]]; then
		# For non-existing command

		TRY=($(compgen -abc | sort | uniq))
		TYPO=$($LAST 2>&1 | tail -1 | cut -d ":" -f 1)

		B=0
		E=$((${#TRY[@]} - 1))
		M=$((B+(E-B)/2))

		while [ $B -lt $E ]; do
			CURRENT="$(./distance ${TRY[$M]} $TYPO)"
			BEFORE="$(./distance ${TRY[$((M - 1))]} $TYPO)"
			AFTER="$(./distance ${TRY[$((M + 1))]} $TYPO)"

			if [ $CURRENT -le 1 ]; then
				FIX=${TRY[$M]} && break
			elif [ $AFTER -eq 1 ]; then
				FIX=${TRY[$(($M + 1))]} && break
			elif [ $BEFORE -eq 1 ]; then
				FIX=${TRY[$(($M - 1))]} && break
			fi

			if [ $AFTER -lt $CURRENT ]; then
				B=$((M + 1))
			else
				E=$((M - 1))
			fi

			M=$((B+(E-B)/2))
		done
		FIX=${TRY[$M]}
	else
		echo Your exit status '('$ESTATUS')' was not caused by a typo
	fi

	echo "Last command: $LAST"
	echo "Typo: $TYPO"
	echo "Best replacement found: $FIX"
	
	RESULT="${LAST/$TYPO/$FIX}"
	while [[ "$RESULT" == *"$TYPO"* ]]; do # Replace all occurrences
		RESULT="${RESULT/$TYPO/$FIX}"
	done
	echo $RESULT
fi
